from random import shuffle
from fs9721 import Flag, Unit

_MALFORMED = [
    # too short
    [0x17, 0x27, 0x3D, 0x47, 0x5D, 0x65, 0x7B, 0x89, 0x97, 0xA0],
    # too long
    [0x17, 0x27, 0x3D, 0x47, 0x5D, 0x65, 0x7B, 0x89, 0x97, 0xA0, 0xB8, 0xC0, 0xD4, 0xE1, 0xF2],
    # duplicate indices
    [0x17, 0x27, 0x3D, 0x37, 0x5D, 0x65, 0x7B, 0x89, 0x97, 0xA0, 0xB8, 0xC0, 0xD4, 0xE1]
]

def valid_expectations(random=False):
    def r(arr):
        if random:
            shuffle(arr)
        return arr

    return [
        {
            "sample": r([0x17, 0x27, 0x3D, 0x47, 0x5D, 0x65, 0x7B, 0x89, 0x97, 0xA0, 0xB8, 0xC0, 0xD4, 0xE1]),
            "units": [Unit.MILLI, Unit.VOLT],
            "flags": [Flag.DC, Flag.AUTO, Flag.CONNECTED],
            "display": "002."
        },
        {
            "sample": r([0x17, 0x27, 0x3D, 0x40, 0x55, 0x67, 0x7D, 0x8B, 0x9F, 0xA0, 0xB8, 0xC0, 0xD4, 0xE1]),
            "units": [Unit.MILLI, Unit.VOLT],
            "flags": [Flag.DC, Flag.AUTO, Flag.CONNECTED],
            "display": "010.9"
        },
        {
            "sample": r([0x17, 0x27, 0x3D, 0x47, 0x5D, 0x63, 0x7F, 0x8F, 0x9F, 0xA0, 0xB8, 0xC0, 0xD4, 0xE1]),
            "units": [Unit.MILLI, Unit.VOLT],
            "flags": [Flag.DC, Flag.AUTO, Flag.CONNECTED],
            "display": "009.8"
        },
        {
            "sample": r([0x17, 0x27, 0x3D, 0x47, 0x5D, 0x61, 0x75, 0x8F, 0x9F, 0xA0, 0xB8, 0xC0, 0xD4, 0xE1]),
            "units": [Unit.MILLI, Unit.VOLT],
            "flags": [Flag.DC, Flag.AUTO, Flag.CONNECTED],
            "display": "007.8"
        },
        {
            "sample": r([0x15, 0x27, 0x3D, 0x47, 0x5D, 0x67, 0x7D, 0x87, 0x9E, 0xA0, 0xB0, 0xC0, 0xD0, 0xE4]),
            "units": [Unit.CELSIUS],
            "flags": [Flag.DC, Flag.CONNECTED],
            "display": "0006"
        },
    ]
